version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    restart: always
    container_name: elasticsearch
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elastic_data:/usr/share/elasticsearch/data:z
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      # ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.0.1
    container_name: logstash
    restart: always
    volumes: 
    - ./config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
    - ./config/pipeline:/usr/share/logstash/pipeline:ro,Z
    # - ./config/pipeline/:/logstash_dir
    # command: logstash -f /logstash_dir/logstash.conf
    depends_on:
    - elasticsearch
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
      # LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.1
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    # environment:
      # KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch
    networks: 
      - elk
volumes:
  elastic_data: {}
networks:
  elk:
    driver: bridge
